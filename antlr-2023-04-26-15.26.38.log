2023-04-26 15:26:37:756 grammar LogManager.java:25 before: (COMBINED_GRAMMAR DjangoModel (RULES (RULE NUM (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE STR (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE EXC (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE LPAR (BLOCK (ALT '('))) (RULE RPAR (BLOCK (ALT ')'))) (RULE PONT (BLOCK (ALT ':'))) (RULE PONTVIRG (BLOCK (ALT ';'))) (RULE VIRG (BLOCK (ALT ','))) (RULE model (BLOCK (ALT 'class' STR 'models.Model' '{' (* (BLOCK (ALT campo))) '}'))) (RULE campo (BLOCK (ALT STR PONT tipo param PONTVIRG))) (RULE tipo (BLOCK (ALT 'models.CharField') (ALT 'models.BooleanField') (ALT 'models.IntegerField') (ALT 'models.ForeignKey'))) (RULE param (BLOCK (ALT LPAR NUM RPAR) (ALT LPAR STRING RPAR) (ALT LPAR 'max_length=' NUM VIRG 'verbose_name=' STRING RPAR)))))
2023-04-26 15:26:37:773 grammar LogManager.java:25 after: (COMBINED_GRAMMAR DjangoModel (RULES (RULE NUM (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE STR (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE EXC (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE LPAR (BLOCK (ALT '('))) (RULE RPAR (BLOCK (ALT ')'))) (RULE PONT (BLOCK (ALT ':'))) (RULE PONTVIRG (BLOCK (ALT ';'))) (RULE VIRG (BLOCK (ALT ','))) (RULE model (BLOCK (ALT 'class' STR 'models.Model' '{' (* (BLOCK (ALT campo))) '}'))) (RULE campo (BLOCK (ALT STR PONT tipo param PONTVIRG))) (RULE tipo (BLOCK (ALT (SET 'models.CharField' 'models.BooleanField' 'models.IntegerField' 'models.ForeignKey')))) (RULE param (BLOCK (ALT LPAR NUM RPAR) (ALT LPAR STRING RPAR) (ALT LPAR 'max_length=' NUM VIRG 'verbose_name=' STRING RPAR)))))
2023-04-26 15:26:37:796 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR DjangoModel (RULES (RULE model (BLOCK (ALT 'class' STR 'models.Model' '{' (* (BLOCK (ALT campo))) '}'))) (RULE campo (BLOCK (ALT STR PONT tipo param PONTVIRG))) (RULE tipo (BLOCK (ALT (SET 'models.CharField' 'models.BooleanField' 'models.IntegerField' 'models.ForeignKey')))) (RULE param (BLOCK (ALT LPAR NUM RPAR) (ALT LPAR STRING RPAR) (ALT LPAR 'max_length=' NUM VIRG 'verbose_name=' STRING RPAR)))))
2023-04-26 15:26:37:796 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR DjangoModelLexer (RULES (RULE T__0 (BLOCK (ALT 'class'))) (RULE T__1 (BLOCK (ALT 'models.Model'))) (RULE T__2 (BLOCK (ALT '{'))) (RULE T__3 (BLOCK (ALT '}'))) (RULE T__4 (BLOCK (ALT 'models.CharField'))) (RULE T__5 (BLOCK (ALT 'models.BooleanField'))) (RULE T__6 (BLOCK (ALT 'models.IntegerField'))) (RULE T__7 (BLOCK (ALT 'models.ForeignKey'))) (RULE T__8 (BLOCK (ALT 'max_length='))) (RULE T__9 (BLOCK (ALT 'verbose_name='))) (RULE NUM (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE STR (BLOCK (ALT [a-zA-Z] (* (BLOCK (ALT [a-zA-Z0-9_])))))) (RULE EXC (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE LPAR (BLOCK (ALT '('))) (RULE RPAR (BLOCK (ALT ')'))) (RULE PONT (BLOCK (ALT ':'))) (RULE PONTVIRG (BLOCK (ALT ';'))) (RULE VIRG (BLOCK (ALT ',')))))
